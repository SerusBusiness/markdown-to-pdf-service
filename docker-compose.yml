version: '3.8'

services:
  markdown-to-pdf-service:
    build: .
    container_name: markdown-to-pdf-service
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
    volumes:
      - ./logs:/usr/src/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { hostname: 'localhost', port: 3000, path: '/health', timeout: 2000 }; const req = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3

  # Example usage service (optional)
  example-client:
    image: curlimages/curl:latest
    container_name: pdf-converter-example
    depends_on:
      - markdown-to-pdf-service
    volumes:
      - ./examples:/examples
    command: >
      sh -c "
        echo 'Waiting for service to be ready...' &&
        sleep 10 &&
        echo 'Testing API with sample markdown...' &&
        curl -X POST http://markdown-to-pdf-service:3000/convert \
          -H 'Content-Type: application/json' \
          -d '{
            \"markdownContent\": \"# Hello World\\n\\nThis is a **test** document with [a link](https://example.com).\\n\\n## Features\\n\\n- Base64 image support\\n- Page numbering\\n- Custom styling\",
            \"options\": {
              \"fileName\": \"test-document.pdf\",
              \"includePageNumbers\": true,
              \"format\": \"A4\"
            }
          }' \
          --output /examples/test-output.pdf &&
        echo 'PDF saved to ./examples/test-output.pdf'
      "
    profiles:
      - testing